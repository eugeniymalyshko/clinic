"use strict";

//---------- Device type-------------------

function isMobile() {
  const regex =
    /Mobi|Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;
  return regex.test(navigator.userAgent);
}

if (isMobile()) {
  document.body.classList.add("_touch");
  //   const menusArrows = document.querySelectorAll(".menu__arrow");
  const menusHub = document.querySelectorAll(".menu__link_hub");

  if (menusHub.length > 0) {
    for (let index = 0; index < menusHub.length; index++) {
      const menuHub = menusHub[index];
      menuHub.addEventListener("click", function (e) {
        menuHub.parentElement.classList.toggle("_active");
      });
    }
  }
} else {
  document.body.classList.add("_pc");
}

// Menu burger
const menuIcon = document.querySelector(".menu__icon");
const body = document.querySelector("body");
const menuBody = document.querySelector(".menu__body");

menuIcon.addEventListener("click", () => {
  menuIcon.classList.toggle("_active");
  menuBody.classList.toggle("_active");
  body.classList.toggle("_lock");
});

// Accordion
const accordions = document.querySelectorAll(".accordion");

accordions.forEach((accordion) => {
  const single = accordion.hasAttribute("data-single");
  const buttons = Array.from(accordion.querySelectorAll(".accordion__button"));

  function setOpen(button, open) {
    const accordionPannel = document.getElementById(
      button.getAttribute("aria-controls")
    );
    button.setAttribute("aria-expanded", String(open));
    accordionPannel.hidden = !open;
  }

  if (single) {
    const current =
      buttons.find(
        (button) => button.getAttribute("aria-expanded") === "true"
      ) || buttons[0];

    buttons.forEach((buttonCurrent) =>
      setOpen(buttonCurrent, buttonCurrent === current)
    );
  } else {
    buttons.forEach((button) => {
      const panel = document.getElementById(
        button.getAttribute("aria-controls")
      );
      panel.hidden = button.getAttribute("aria-expanded") !== "true";
    });
  }

  buttons.forEach((button, index) => {
    button.addEventListener("click", () => {
      const isOpen = button.getAttribute("aria-expanded") === "true";

      if (single) {
        buttons.forEach((button) =>
          setOpen(button, button === button ? !isOpen : false)
        );
      } else {
        setOpen(button, !isOpen);
      }
    });

    button.addEventListener("keydown", (e) => {
      let target = null;
      if (e.key === "ArrowDown") target = buttons[(index + 1) % buttons.length];
      if (e.key === "ArrowUp")
        target = buttons[(index - 1 + buttons.length) % buttons.length];
      if (e.key === "Home") target = buttons[0];
      if (e.key === "End") target = buttons[buttons.length - 1];
      if (target) {
        e.preventDefault();
        target.focus();
      }

      if (e.key === " " || e.key === "Enter") {
        e.preventDefault();
        button.click();
      }
    });
  });
});
